/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Interfaces.ISalariedPerson;
import Interfaces.ISubordinate;
import java.io.IOException;
import java.util.ArrayList;
import oca.project.Manager;
import oca.project.PayrollReportItem;
import oca.project.Person;
import oca.project.SalariedSubordinate;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import java.io.IOException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import oca.project.ContractSubordinate;
import oca.project.Launcher;
/**
 *
 * @author 91030283
 */
public class AssignBonusForm extends javax.swing.JFrame {

    /**
     * Creates new form AssignBonusForm
     */
    
    //declare and inastantiate ArrayList of persons
    private ArrayList<Person> persons = new ArrayList<>();
    ArrayList<ISubordinate> subordinateList = new ArrayList<>();
    
    //used in Check current Bonus button
    double currentBonusOfSelectedSalSub = 0;
    SalariedSubordinate selectedSalariedSubordinate;
    ISubordinate selectedISubordinate;
    
    //combo boxes models
    DefaultComboBoxModel<Object> managersModel = new javax.swing.DefaultComboBoxModel<>();
    DefaultComboBoxModel<Object> subordinatesModel = new javax.swing.DefaultComboBoxModel<>();
    
    //try and catch code declarations
    String Message = "";
    Manager selectedManager;
    
            
    public AssignBonusForm() throws ParseException {
        initComponents();
        
        //populating name combo box with all employees goes into SetPersons method
            
        }
        
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exceptionOptionPane = new javax.swing.JOptionPane();
        jLabel2 = new javax.swing.JLabel();
        managerCmboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        subordinateComboBox = new javax.swing.JComboBox();
        bonusTxtBox = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        assignBonusBtn = new javax.swing.JButton();
        checkCurrentBonusBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Manager:");

        managerCmboBox.setBackground(new java.awt.Color(153, 255, 153));
        managerCmboBox.setEditable(true);
        managerCmboBox.setForeground(new java.awt.Color(51, 51, 255));
        managerCmboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerCmboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("Subordinates List");

        subordinateComboBox.setBackground(new java.awt.Color(153, 255, 153));
        subordinateComboBox.setEditable(true);
        subordinateComboBox.setForeground(new java.awt.Color(51, 51, 255));
        subordinateComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subordinateComboBoxActionPerformed(evt);
            }
        });

        bonusTxtBox.setToolTipText("");
        bonusTxtBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bonusTxtBoxActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("Bonus :");

        assignBonusBtn.setBackground(new java.awt.Color(153, 255, 153));
        assignBonusBtn.setForeground(new java.awt.Color(51, 51, 255));
        assignBonusBtn.setText("Assign Bonus");
        assignBonusBtn.setToolTipText("");
        assignBonusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBonusBtnActionPerformed(evt);
            }
        });

        checkCurrentBonusBtn.setBackground(new java.awt.Color(153, 255, 153));
        checkCurrentBonusBtn.setForeground(new java.awt.Color(51, 51, 255));
        checkCurrentBonusBtn.setText("Check Current Bonus");
        checkCurrentBonusBtn.setToolTipText("");
        checkCurrentBonusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCurrentBonusBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(153, 255, 153));
        backBtn.setForeground(new java.awt.Color(51, 51, 255));
        backBtn.setText("Back");
        backBtn.setBorderPainted(false);
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Assign Bonus");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(69, 69, 69)
                        .addComponent(bonusTxtBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(assignBonusBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(checkCurrentBonusBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(188, 188, 188)
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(managerCmboBox, 0, 323, Short.MAX_VALUE)
                                    .addComponent(subordinateComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(275, 275, 275)
                                .addComponent(jLabel1)))
                        .addGap(0, 346, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(managerCmboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(subordinateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(bonusTxtBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(assignBonusBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkCurrentBonusBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(140, 140, 140))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bonusTxtBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bonusTxtBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bonusTxtBoxActionPerformed

    private void checkCurrentBonusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCurrentBonusBtnActionPerformed

        //check currently assgined bonus for selected sub
        currentBonusOfSelectedSalSub = selectedSalariedSubordinate.getCurrentBonus();
        
        
    }//GEN-LAST:event_checkCurrentBonusBtnActionPerformed

    private void assignBonusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBonusBtnActionPerformed

        
        
        selectedSalariedSubordinate = (SalariedSubordinate)subordinateComboBox.getSelectedItem();
        
        try
        {
            String strbonus = bonusTxtBox.getText();
            double doubleBonusEntered = 0 ;
            double alreadyGotBonusAmount = 0; 
            
            double managerBonusFund = 0 ;
            managerBonusFund = Manager.managerBonusFund;
            alreadyGotBonusAmount = selectedSalariedSubordinate.getCurrentBonus();
            
            //checking in process
            if (strbonus.equals(""))
            {   
              Message =   "You haven't specified the bonus";
              JOptionPane.showMessageDialog(this, Message,"No bonus Assigned",JOptionPane.INFORMATION_MESSAGE);
            } 
            doubleBonusEntered = Double.parseDouble(strbonus);
            
            if(alreadyGotBonusAmount> 0)
            {
              Message =   selectedSalariedSubordinate.firstName + selectedSalariedSubordinate.lastName + "has already been assigned bonus.";
              JOptionPane.showMessageDialog(this, Message,"Announcement",JOptionPane.INFORMATION_MESSAGE);
              
            }    
            
            else if (doubleBonusEntered > managerBonusFund )
            {
              Message =   selectedManager.firstName + " " + selectedManager.lastName + " cannot allocate more than $ " + managerBonusFund;
              JOptionPane.showMessageDialog(this, Message,"Announcement",JOptionPane.INFORMATION_MESSAGE);
               
            }
            else
            {    
                
               //bonus is added 
               
               selectedSalariedSubordinate.setCurrentBonus(doubleBonusEntered);
               
               //user informed 
               Message = "The bonus  " + selectedSalariedSubordinate.getCurrentBonus() + " has been assigned to " +" "+selectedSalariedSubordinate.firstName +" "+ selectedSalariedSubordinate.lastName ;
               JOptionPane.showMessageDialog(this, Message,"Announcement",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        

        catch (Exception e)
        {
          Message = "General exception Caught!";
          JOptionPane.showMessageDialog(this, Message,"Announcement",JOptionPane.INFORMATION_MESSAGE);
          e.printStackTrace();
        }
        
       


    //method's braces    
    }//GEN-LAST:event_assignBonusBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        
        this.setVisible(false);
        Launcher.mainForm.setVisible(true);
       
        
        
        
    }//GEN-LAST:event_backBtnActionPerformed

    private void subordinateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subordinateComboBoxActionPerformed

        
    }//GEN-LAST:event_subordinateComboBoxActionPerformed

    private void managerCmboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerCmboBoxActionPerformed
       
        selectedManager = (Manager)managerCmboBox.getSelectedItem();
        subordinateList = selectedManager.getSubordinateList();
       
            
                for (ISubordinate iSubordinate : subordinateList) {
                    
                    // find only ISalariedPerson adn add them.  DON'T adda contractors
                  if (iSubordinate instanceof ISalariedPerson) //SalariedSubordinate
                {
                    subordinatesModel.addElement(iSubordinate);
                    
                }   
                    subordinateComboBox.setModel(subordinatesModel);
                    
                    selectedISubordinate =(ISubordinate)subordinateComboBox.getSelectedItem();
                    
            }
    }//GEN-LAST:event_managerCmboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBonusBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField bonusTxtBox;
    private javax.swing.JButton checkCurrentBonusBtn;
    private javax.swing.JOptionPane exceptionOptionPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox managerCmboBox;
    private javax.swing.JComboBox subordinateComboBox;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the persons
     */
    public ArrayList<Person> getPersons() {
        return persons;
    }

    /**
     * @param persons the persons to set
     */
    public void setPersons(ArrayList<Person> persons) {
        this.persons = persons;
        
        
        //populating Manger Combobox
        for (Person p : persons) {
            
            if (p instanceof Manager) {               
                Manager manager = (Manager)p;
                managersModel.addElement(manager);
               
            }
            
        }
            managerCmboBox.setModel(managersModel);
         
     
    }

    
}
