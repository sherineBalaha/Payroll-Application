/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import oca.project.Launcher;
import oca.project.PayrollReportItem;
import oca.project.Person;
import oca.project.SalariedSubordinate;
import oca.project.TimePeriods;

/**
 *
 * @author 91030283
 */



public class AddPaymentsForm extends javax.swing.JFrame {

    /**
     * Creates new form AddPaymentsForm
     */
    
    //declare and inastantiate ArrayList of persons
    private ArrayList<Person> persons = new ArrayList<>();
    
    //salaried subordinate and Reort item declaration of instance
    SalariedSubordinate          selectedSalariedSubordinate;
    PayrollReportItem            newPayrollReportItem ;
    ArrayList<PayrollReportItem> mainPayrollReportItems;
    String Message = "";
       
    //calendar update declarations
    Date currentStartDate = new Date();
    Date newStartDate = new Date();
    
    public AddPaymentsForm(ArrayList<PayrollReportItem> payrollReportItem) throws ParseException {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        AddPaymentOptionePane = new javax.swing.JOptionPane();
        jLabel1 = new javax.swing.JLabel();
        createFortnightlyPaymentButton = new javax.swing.JButton();
        createMonthlyPaymentButton = new javax.swing.JButton();
        backBtn1 = new javax.swing.JButton();

        backBtn.setBackground(new java.awt.Color(153, 255, 153));
        backBtn.setForeground(new java.awt.Color(51, 51, 255));
        backBtn.setText("Back");
        backBtn.setBorderPainted(false);
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Add Payments");

        createFortnightlyPaymentButton.setBackground(new java.awt.Color(153, 255, 153));
        createFortnightlyPaymentButton.setForeground(new java.awt.Color(51, 51, 255));
        createFortnightlyPaymentButton.setText("Create Fortnightly Payment");
        createFortnightlyPaymentButton.setToolTipText("");
        createFortnightlyPaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFortnightlyPaymentButtonActionPerformed(evt);
            }
        });

        createMonthlyPaymentButton.setBackground(new java.awt.Color(153, 255, 153));
        createMonthlyPaymentButton.setForeground(new java.awt.Color(51, 51, 255));
        createMonthlyPaymentButton.setText("Create Monthly Payment");
        createMonthlyPaymentButton.setToolTipText("");
        createMonthlyPaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createMonthlyPaymentButtonActionPerformed(evt);
            }
        });

        backBtn1.setBackground(new java.awt.Color(153, 255, 153));
        backBtn1.setForeground(new java.awt.Color(51, 51, 255));
        backBtn1.setText("Back");
        backBtn1.setBorderPainted(false);
        backBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(createFortnightlyPaymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(301, 301, 301)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(253, 253, 253)
                            .addComponent(createMonthlyPaymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(268, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(206, 206, 206))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(createMonthlyPaymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(createFortnightlyPaymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(backBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createFortnightlyPaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createFortnightlyPaymentButtonActionPerformed
           
        try
        {
           
           
           currentStartDate      = selectedSalariedSubordinate.getDateStarted();
            
            for (Person person : persons)
            {   
               
                if (person instanceof SalariedSubordinate)
                {
                    //casting person into SalariedSubordinate subclass
                    selectedSalariedSubordinate = (SalariedSubordinate)person;
                    
                    if(selectedSalariedSubordinate.getTimePeriod() == TimePeriods.FORTNIGHTLY)
                    {
                        
                        double doublePaidselectedSalariedSub = selectedSalariedSubordinate.CalculatePay(currentStartDate,0);
                        newPayrollReportItem = new PayrollReportItem(person, doublePaidselectedSalariedSub, currentStartDate, TimePeriods.FORTNIGHTLY); 
                        mainPayrollReportItems = Launcher.mainForm.getPayrollReportItems();
                        mainPayrollReportItems.add(newPayrollReportItem);
                        
                        //setting calendar instance
                        Launcher.mainForm.currentFortnightStart.setTime(currentStartDate);
                        Launcher.mainForm.currentFortnightStart.add(Calendar.WEEK_OF_MONTH, 2);
                        newStartDate = Launcher.mainForm.currentFortnightStart.getTime();
                        selectedSalariedSubordinate.setStartDate(newStartDate);
                        
                        //set mainForm arraylist
                        Launcher.mainForm.setPayrollReportItems(mainPayrollReportItems); 
                        
                    }
                    
                }//first if
            }//for
        
        }
        catch (Exception e)
        {
          Message = "General error has occurred!";
          AddPaymentOptionePane = new JOptionPane(Message,2,1);    
          AddPaymentOptionePane.setVisible(true);
        }

    }//GEN-LAST:event_createFortnightlyPaymentButtonActionPerformed

    private void createMonthlyPaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createMonthlyPaymentButtonActionPerformed

        try
        {
           
            for (Person person : persons)
            {   
               
                if (person instanceof SalariedSubordinate)
                {
                    //casting person into SalariedSubordinate subclass
                    selectedSalariedSubordinate = (SalariedSubordinate)person;
                    
                    if(selectedSalariedSubordinate.getTimePeriod() == TimePeriods.MONTHLY)
                    {
                        
                        double doublePaidselectedSalariedSub = selectedSalariedSubordinate.CalculatePay(selectedSalariedSubordinate.getDateStarted(),0);
                        newPayrollReportItem = new PayrollReportItem(person, doublePaidselectedSalariedSub, selectedSalariedSubordinate.getDateStarted(), TimePeriods.MONTHLY); 
                        mainPayrollReportItems = Launcher.mainForm.getPayrollReportItems();
                        mainPayrollReportItems.add(newPayrollReportItem);
                        
                        //setting calendar instance
                        Launcher.mainForm.currentMonthStart.setTime(currentStartDate);
                        Launcher.mainForm.currentMonthStart.add(Calendar.MONTH, 1);
                        newStartDate = Launcher.mainForm.currentMonthStart.getTime();
                        selectedSalariedSubordinate.setStartDate(newStartDate);
                        
                        //set mainForm arraylist
                        Launcher.mainForm.setPayrollReportItems(mainPayrollReportItems); 
                    }
                    
                }//first if
            }//for
        
        }
        catch (Exception e)
        {
          Message = "General error has occurred!";
          JOptionPane.showMessageDialog(this, Message,"Announcement",JOptionPane.INFORMATION_MESSAGE);
        }




    }//GEN-LAST:event_createMonthlyPaymentButtonActionPerformed
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        
        this.setVisible(false);
        Launcher.mainForm.setVisible(true);
        

    }//GEN-LAST:event_backBtnActionPerformed

    private void backBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtn1ActionPerformed

        
        this.setVisible(false);
        Launcher.mainForm.setVisible(true);

    }//GEN-LAST:event_backBtn1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        final ArrayList<PayrollReportItem> payrollReportItem = new ArrayList<>();
        
 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JOptionPane AddPaymentOptionePane;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton backBtn1;
    private javax.swing.JButton createFortnightlyPaymentButton;
    private javax.swing.JButton createMonthlyPaymentButton;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the persons
     */
    public ArrayList<Person> getPersons() {
        return persons;
    }

    /**
     * @param persons the persons to set
     */
    public void setPersons(ArrayList<Person> persons) {
        this.persons = persons;
    }


}
